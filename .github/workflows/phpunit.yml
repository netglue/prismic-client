name: PHPUnit Test Suite
on:
  schedule:
    - cron: '0 9 * * 1'
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  run-tests:
    name: PHP ${{ matrix.php-versions }}
    runs-on: ubuntu-latest
    env:
      php_extentions: mbstring,curl,json,intl,apcu
      php_extensions_cache_key: 'php-extensions-v1'
      repo_config: ${{secrets.SMOKE_TEST_REPOS}}
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.3', '7.4', '8.0']
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP Extension Cache
        id: cache-env
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.php_extentions }}
          key: ${{ env.php_extensions_cache_key }}
      - name: Cache PHP Extensions
        uses: actions/cache@v1
        with:
          path: ${{ steps.cache-env.outputs.dir }}
          key: ${{ steps.cache-env.outputs.key }}
          restore-keys: ${{ steps.cache-env.outputs.key }}
      - name: Setup PHP Action
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.php_extentions }}
          coverage: pcov
          ini-values: apc.enabled=1, apc.enable_cli=1
      - name: Check PHP Setup
        run: |
          php -v
          php -m
          php -i
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php-versions }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ignore-platform-reqs
      - name: Setup Smoke Test Repos
        run: echo $repo_config > test/config/config.php
        if: ${{ env.repo_config != '' }}
      - name: Check CS
        run: composer cs-check
      - name: PHPUnit
        run: php -dpcov.directory=. -dpcov.enabled=1 -dpcov.exclude="~vendor~" ./vendor/bin/phpunit --stop-on-error --coverage-clover=coverage.xml
      - name: Upload Coverage to CodeCov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: false
