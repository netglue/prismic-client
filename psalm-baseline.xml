<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.8.1@f73f2299dbc59a3e6c4d66cff4605176e728ee69">
  <file src="src/Api.php">
    <InvalidCatch occurrences="2"/>
    <InvalidScalarArgument occurrences="1">
      <code>$error-&gt;getCode()</code>
    </InvalidScalarArgument>
    <MissingClosureParamType occurrences="1">
      <code>$given</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="1">
      <code>static function ($given, callable $locator, string $message) {</code>
    </MissingClosureReturnType>
    <MixedArgument occurrences="6">
      <code>$data['body'] ?? null</code>
      <code>$decodedPayload</code>
      <code>$responseBody-&gt;mainDocument</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$data['body']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="3">
      <code>$data</code>
      <code>$decodedPayload</code>
      <code>$params[$parameter]</code>
    </MixedAssignment>
    <MixedPropertyTypeCoercion occurrences="1">
      <code>$_COOKIE ?? []</code>
    </MixedPropertyTypeCoercion>
    <PossiblyNullArgument occurrences="3">
      <code>$data['body'] ?? null</code>
      <code>$resultSet-&gt;nextPage()</code>
      <code>$resultSet-&gt;previousPage()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="1">
      <code>save</code>
    </PossiblyNullReference>
    <RedundantCondition occurrences="1">
      <code>$_COOKIE</code>
    </RedundantCondition>
    <TypeDoesNotContainNull occurrences="1">
      <code>[]</code>
    </TypeDoesNotContainNull>
  </file>
  <file src="src/Document/Fragment/BaseCollection.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>Fragment[]</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnStatement occurrences="1">
      <code>new ArrayIterator($this-&gt;fragments)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>Fragment[]</code>
    </InvalidReturnType>
    <UnsafeInstantiation occurrences="2">
      <code>new static($fragments)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Document/Fragment/Color.php">
    <InvalidReturnStatement occurrences="1"/>
    <InvalidReturnType occurrences="1">
      <code>int[]</code>
    </InvalidReturnType>
    <PossiblyNullArgument occurrences="7">
      <code>$b</code>
      <code>$b</code>
      <code>$g</code>
      <code>$g</code>
      <code>$r</code>
      <code>$r</code>
      <code>$this-&gt;asRgb()</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="6">
      <code>$b</code>
      <code>$b</code>
      <code>$g</code>
      <code>$g</code>
      <code>$r</code>
      <code>$r</code>
    </PossiblyNullArrayAccess>
  </file>
  <file src="src/Document/Fragment/DateFragment.php">
    <MissingImmutableAnnotation occurrences="1">
      <code>DateTimeImmutable</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Document/Fragment/Embed.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$value !== null &amp;&amp; ! is_scalar($value)</code>
    </DocblockTypeContradiction>
    <MixedArgument occurrences="1">
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$name</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="1">
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>string|int|float|bool|null</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;attributes[$name] ?? null</code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion occurrences="2">
      <code>$this-&gt;attributes</code>
      <code>string[]|int[]|float[]|bool[]|null[]</code>
    </MixedReturnTypeCoercion>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$value !== null</code>
    </RedundantConditionGivenDocblockType>
    <UnsafeInstantiation occurrences="1">
      <code>new static($type, $url, $provider, $html, $width, $height, $attributes)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Document/Fragment/Factory.php">
    <MixedArgumentTypeCoercion occurrences="1">
      <code>self::assertObjectPropertyIsArray($data, 'tags')</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="1">
      <code>$value</code>
    </MixedAssignment>
    <PossiblyNullArgument occurrences="1">
      <code>$lang</code>
    </PossiblyNullArgument>
    <RedundantCondition occurrences="2">
      <code>assert(is_string($data))</code>
      <code>is_string($data)</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>'\is_string'</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Document/Fragment/Image.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>self[]</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnStatement occurrences="1">
      <code>new ArrayIterator($this-&gt;views)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>self[]</code>
    </InvalidReturnType>
    <MixedReturnTypeCoercion occurrences="2">
      <code>array_keys($this-&gt;views)</code>
      <code>string[]</code>
    </MixedReturnTypeCoercion>
    <PossiblyNullIterator occurrences="1">
      <code>$views</code>
    </PossiblyNullIterator>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$views</code>
    </PropertyNotSetInConstructor>
    <UnusedParam occurrences="1">
      <code>$linkTo</code>
    </UnusedParam>
  </file>
  <file src="src/Document/Fragment/Number.php">
    <DocblockTypeContradiction occurrences="1">
      <code>! is_int($number) &amp;&amp; ! is_float($number)</code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Document/Fragment/RichText.php">
    <MixedArgument occurrences="1">
      <code>$fragment</code>
    </MixedArgument>
  </file>
  <file src="src/Document/Fragment/Slice.php">
    <InvalidCast occurrences="2">
      <code>$this-&gt;items</code>
      <code>$this-&gt;primary</code>
    </InvalidCast>
  </file>
  <file src="src/Document/Fragment/Span.php">
    <UnsafeInstantiation occurrences="1">
      <code>new static($type, $start, $end, $label, $link)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Document/Fragment/TextElement.php">
    <InvalidToString occurrences="1">
      <code>string</code>
    </InvalidToString>
    <NullableReturnStatement occurrences="1">
      <code>$this-&gt;text</code>
    </NullableReturnStatement>
  </file>
  <file src="src/Exception/AuthenticationError.php">
    <UnsafeInstantiation occurrences="1"/>
  </file>
  <file src="src/Exception/ImageViewNotFound.php">
    <UnsafeInstantiation occurrences="1"/>
  </file>
  <file src="src/Exception/InvalidArgument.php">
    <UnsafeInstantiation occurrences="7"/>
  </file>
  <file src="src/Exception/InvalidPreviewToken.php">
    <UnsafeInstantiation occurrences="2">
      <code>new static('The given preview token is not a valid url', 400, $error)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Exception/JsonError.php">
    <InvalidScalarArgument occurrences="2">
      <code>$exception-&gt;getCode()</code>
      <code>$exception-&gt;getCode()</code>
    </InvalidScalarArgument>
    <UnsafeInstantiation occurrences="3"/>
  </file>
  <file src="src/Exception/PreviewTokenExpired.php">
    <MixedAssignment occurrences="1">
      <code>$error</code>
    </MixedAssignment>
  </file>
  <file src="src/Exception/RequestFailure.php">
    <InvalidScalarArgument occurrences="1">
      <code>$exception-&gt;getCode()</code>
    </InvalidScalarArgument>
    <UnsafeInstantiation occurrences="4"/>
  </file>
  <file src="src/Exception/UnexpectedValue.php">
    <UnsafeInstantiation occurrences="2">
      <code>new static($message)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Exception/UnknownBookmark.php">
    <UnsafeInstantiation occurrences="1"/>
  </file>
  <file src="src/Exception/UnknownForm.php">
    <UnsafeInstantiation occurrences="1"/>
  </file>
  <file src="src/Json.php">
    <MixedInferredReturnType occurrences="1">
      <code>object</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>json_decode($jsonString, false, 512, JSON_THROW_ON_ERROR)</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Predicate.php">
    <MixedArgument occurrences="3">
      <code>$data['args']</code>
      <code>$data['fragment']</code>
      <code>$data['name']</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$arg</code>
    </MixedAssignment>
  </file>
  <file src="src/Query.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_scalar($value)</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="5">
      <code>$parameters</code>
      <code>$parameters</code>
      <code>$parameters</code>
      <code>$parameters</code>
      <code>$parameters</code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$parameters</code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement occurrences="1">
      <code>$parameters</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>string[]|int[]</code>
    </InvalidReturnType>
    <MissingClosureParamType occurrences="1">
      <code>$params</code>
    </MissingClosureParamType>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$name</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="4">
      <code>$param</code>
      <code>$parameters[$name]</code>
      <code>$params</code>
      <code>$value</code>
    </MixedAssignment>
    <PossiblyInvalidArgument occurrences="1">
      <code>$parameters[$name]</code>
    </PossiblyInvalidArgument>
    <UnsafeInstantiation occurrences="1">
      <code>new static($this-&gt;form)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/ResultSet.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>Document[]</code>
    </ImplementedReturnTypeMismatch>
  </file>
  <file src="src/ResultSet/StandardResultSet.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$results</code>
    </ArgumentTypeCoercion>
    <PossiblyFalsePropertyAssignmentValue occurrences="1"/>
  </file>
  <file src="src/ResultSet/TypicalResultSetBehaviour.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>Document[]</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnType occurrences="1">
      <code>Document[]</code>
    </InvalidReturnType>
  </file>
  <file src="src/Serializer/HtmlSerializer.php">
    <MissingClosureParamType occurrences="1">
      <code>$character</code>
    </MissingClosureParamType>
    <MixedArgument occurrences="4">
      <code>$character</code>
      <code>$item</code>
      <code>$nodes[$end]</code>
      <code>$nodes[$start]</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1"/>
    <MixedAssignment occurrences="1">
      <code>$item</code>
    </MixedAssignment>
    <PossiblyNullArgument occurrences="2">
      <code>$embed-&gt;html()</code>
      <code>$span-&gt;link()</code>
    </PossiblyNullArgument>
    <RedundantCondition occurrences="10">
      <code>assert($fragment instanceof BooleanFragment)</code>
      <code>assert($fragment instanceof Color)</code>
      <code>assert($fragment instanceof DateFragment)</code>
      <code>assert($fragment instanceof Embed)</code>
      <code>assert($fragment instanceof GeoPoint)</code>
      <code>assert($fragment instanceof Image)</code>
      <code>assert($fragment instanceof Number)</code>
      <code>assert($fragment instanceof Slice)</code>
      <code>assert($fragment instanceof StringFragment)</code>
      <code>assert($fragment instanceof TextElement)</code>
    </RedundantCondition>
  </file>
  <file src="src/Value/ApiData.php">
    <MixedArgument occurrences="1">
      <code>$tags</code>
    </MixedArgument>
    <PropertyNotSetInConstructor occurrences="6">
      <code>$bookmarks</code>
      <code>$forms</code>
      <code>$languages</code>
      <code>$refs</code>
      <code>$tags</code>
      <code>$types</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Value/DataAssertionBehaviour.php">
    <InvalidFalsableReturnType occurrences="1">
      <code>DateTimeImmutable</code>
    </InvalidFalsableReturnType>
    <MixedInferredReturnType occurrences="5">
      <code>bool</code>
      <code>int</code>
      <code>mixed[]</code>
      <code>object</code>
      <code>string</code>
    </MixedInferredReturnType>
  </file>
  <file src="src/Value/DocumentData.php">
    <MixedArgumentTypeCoercion occurrences="1">
      <code>self::assertObjectPropertyIsArray($data, 'tags')</code>
    </MixedArgumentTypeCoercion>
  </file>
  <file src="src/Value/FormSpec.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>FormField[]</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnStatement occurrences="1">
      <code>new ArrayIterator($this-&gt;fields)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>FormField[]</code>
    </InvalidReturnType>
  </file>
  <file src="test/Smoke/ApiTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
    <InvalidReturnType occurrences="3">
      <code>mixed[]</code>
      <code>mixed[]</code>
      <code>mixed[]</code>
    </InvalidReturnType>
    <MixedInferredReturnType occurrences="3">
      <code>mixed[]</code>
      <code>mixed[]</code>
      <code>mixed[]</code>
    </MixedInferredReturnType>
    <PossiblyNullReference occurrences="1">
      <code>previousPage</code>
    </PossiblyNullReference>
  </file>
  <file src="test/Smoke/CacheTest.php">
    <InvalidReturnType occurrences="1">
      <code>Api[][]</code>
    </InvalidReturnType>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$uri</code>
    </MixedArgumentTypeCoercion>
  </file>
  <file src="test/Smoke/Example/ExampleHydratingResultSetTest.php">
    <InvalidReturnType occurrences="1">
      <code>Api[][]</code>
    </InvalidReturnType>
    <MixedArgumentTypeCoercion occurrences="2">
      <code>$url</code>
      <code>$url</code>
    </MixedArgumentTypeCoercion>
  </file>
  <file src="test/Smoke/PredicateUseCaseTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
    <UnusedVariable occurrences="1">
      <code>$host</code>
    </UnusedVariable>
  </file>
  <file src="test/Smoke/Serializer/HtmlSerializerTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
    <MixedArgument occurrences="1">
      <code>$document-&gt;content()</code>
    </MixedArgument>
    <UndefinedInterfaceMethod occurrences="1">
      <code>content</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Smoke/TestCase.php">
    <InvalidReturnStatement occurrences="2">
      <code>$endpoints</code>
      <code>$endpoints</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="3">
      <code>Api[]</code>
      <code>Api[][]</code>
      <code>string[]</code>
    </InvalidReturnType>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$url</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="3">
      <code>$configured['endpoints']</code>
      <code>$spec['token']</code>
      <code>$spec['url']</code>
    </MixedArrayAccess>
    <MixedArrayOffset occurrences="1">
      <code>$endpoints[$spec['url']]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="4">
      <code>$configured</code>
      <code>$configured</code>
      <code>$endpoints[$spec['url']]</code>
      <code>$spec</code>
    </MixedAssignment>
  </file>
  <file src="test/Unit/ApiTest.php">
    <DeprecatedMethod occurrences="1">
      <code>tags</code>
    </DeprecatedMethod>
    <InvalidReturnType occurrences="1">
      <code>int[][]</code>
    </InvalidReturnType>
    <MixedArgument occurrences="2">
      <code>$request-&gt;getUri()-&gt;getQuery()</code>
      <code>$request-&gt;getUri()-&gt;getQuery()</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$request</code>
      <code>$request</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>mixed[]</code>
      <code>mixed[]</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="4">
      <code>getQuery</code>
      <code>getQuery</code>
      <code>getUri</code>
      <code>getUri</code>
    </MixedMethodCall>
  </file>
  <file src="test/Unit/Document/Fragment/BooleanFragmentTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
    <InvalidReturnStatement occurrences="1"/>
    <InvalidReturnType occurrences="1">
      <code>bool[]</code>
    </InvalidReturnType>
  </file>
  <file src="test/Unit/Document/Fragment/ColorTest.php">
    <MixedInferredReturnType occurrences="1">
      <code>mixed[]</code>
    </MixedInferredReturnType>
  </file>
  <file src="test/Unit/Document/Fragment/DocumentLinkTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
    <InvalidScalarArgument occurrences="1">
      <code>[1, 2]</code>
    </InvalidScalarArgument>
  </file>
  <file src="test/Unit/Document/Fragment/EmbedTest.php">
    <InvalidReturnType occurrences="1">
      <code>mixed[]</code>
    </InvalidReturnType>
    <MixedInferredReturnType occurrences="1">
      <code>mixed[]</code>
    </MixedInferredReturnType>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertIsIterable</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="test/Unit/Document/Fragment/FactoryTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$expectedType</code>
    </ArgumentTypeCoercion>
    <MixedInferredReturnType occurrences="2">
      <code>mixed[]</code>
      <code>mixed[]</code>
    </MixedInferredReturnType>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assert($fragment instanceof GeoPoint)</code>
      <code>assert($fragment instanceof GeoPoint)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="test/Unit/Document/Fragment/GeoPointTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
  </file>
  <file src="test/Unit/Document/Fragment/ImageLinkTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
  </file>
  <file src="test/Unit/Document/Fragment/ImageTest.php">
    <PropertyTypeCoercion occurrences="1">
      <code>Factory::factory(Json::decodeObject($this-&gt;jsonFixtureByFileName('images.json')))</code>
    </PropertyTypeCoercion>
  </file>
  <file src="test/Unit/Document/Fragment/MediaLinkTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
  </file>
  <file src="test/Unit/Document/Fragment/NumberTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
    <InvalidScalarArgument occurrences="1">
      <code>'foo'</code>
    </InvalidScalarArgument>
    <MixedInferredReturnType occurrences="1">
      <code>mixed[]</code>
    </MixedInferredReturnType>
  </file>
  <file src="test/Unit/Document/Fragment/RichTextTest.php">
    <InvalidArgument occurrences="4">
      <code>$richText-&gt;get(1)</code>
      <code>$richText-&gt;get(3)</code>
      <code>$richText-&gt;get(5)</code>
      <code>$richText-&gt;get(6)</code>
    </InvalidArgument>
    <UndefinedInterfaceMethod occurrences="2">
      <code>text</code>
      <code>text</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Unit/Document/Fragment/SliceTest.php">
    <PropertyTypeCoercion occurrences="1">
      <code>$document-&gt;content()-&gt;get('slice-zone')</code>
    </PropertyTypeCoercion>
  </file>
  <file src="test/Unit/Document/Fragment/TextElementTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
    <InvalidArgument occurrences="1">
      <code>['dingdong']</code>
    </InvalidArgument>
    <MixedInferredReturnType occurrences="2">
      <code>mixed[]</code>
      <code>mixed[]</code>
    </MixedInferredReturnType>
  </file>
  <file src="test/Unit/JsonTest.php">
    <MixedInferredReturnType occurrences="2">
      <code>mixed[]</code>
      <code>mixed[]</code>
    </MixedInferredReturnType>
  </file>
  <file src="test/Unit/PredicateTest.php">
    <InvalidScalarArgument occurrences="1">
      <code>true</code>
    </InvalidScalarArgument>
    <MixedArgument occurrences="11">
      <code>$high</code>
      <code>$low</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <MixedInferredReturnType occurrences="7">
      <code>mixed[]</code>
      <code>mixed[]</code>
      <code>mixed[]</code>
      <code>mixed[]</code>
      <code>mixed[]</code>
      <code>mixed[]</code>
      <code>mixed[]</code>
    </MixedInferredReturnType>
    <PossiblyFalseArgument occurrences="1">
      <code>false</code>
    </PossiblyFalseArgument>
    <TypeDoesNotContainType occurrences="1">
      <code>assert($rehydrated instanceof Predicate)</code>
    </TypeDoesNotContainType>
    <UnusedFunctionCall occurrences="1">
      <code>var_export</code>
    </UnusedFunctionCall>
  </file>
  <file src="test/Unit/QueryTest.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$this-&gt;formData</code>
    </DocblockTypeContradiction>
    <MissingConstructor occurrences="1">
      <code>$formData</code>
    </MissingConstructor>
    <MixedArgument occurrences="3">
      <code>$this-&gt;formData()-&gt;collection</code>
      <code>$this-&gt;formData()-&gt;everything</code>
      <code>$this-&gt;formData()-&gt;withQuery</code>
    </MixedArgument>
    <MixedArrayAssignment occurrences="6">
      <code>$queries['Collection'][1]</code>
      <code>$queries['Collection'][1]</code>
      <code>$queries['Standard Form'][1]</code>
      <code>$queries['Standard Form'][1]</code>
      <code>$queries['With Query'][1]</code>
      <code>$queries['With Query'][1]</code>
    </MixedArrayAssignment>
    <MixedInferredReturnType occurrences="5">
      <code>mixed[]</code>
      <code>mixed[]</code>
      <code>mixed[]</code>
      <code>mixed[]</code>
      <code>mixed[]</code>
    </MixedInferredReturnType>
  </file>
  <file src="test/Unit/Serializer/HtmlSerializerTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
    <MixedInferredReturnType occurrences="2">
      <code>mixed[]</code>
      <code>mixed[]</code>
    </MixedInferredReturnType>
  </file>
  <file src="test/Unit/Value/ApiDataTest.php">
    <DeprecatedMethod occurrences="5">
      <code>tags</code>
      <code>tags</code>
      <code>tags</code>
      <code>tags</code>
      <code>tags</code>
    </DeprecatedMethod>
    <InternalMethod occurrences="2">
      <code>addToAssertionCount</code>
      <code>addToAssertionCount</code>
    </InternalMethod>
  </file>
  <file src="test/Unit/Value/DocumentDataTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
  </file>
  <file src="test/Unit/Value/FormFieldTest.php">
    <MixedInferredReturnType occurrences="2">
      <code>mixed[]</code>
      <code>mixed[]</code>
    </MixedInferredReturnType>
  </file>
</files>
