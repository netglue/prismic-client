<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.16.1@aa7e400908833b10c0333861f86cd48c510b60eb">
  <file src="src/Api.php">
    <InvalidCatch occurrences="2"/>
    <InvalidScalarArgument occurrences="1">
      <code>$error-&gt;getCode()</code>
    </InvalidScalarArgument>
    <MissingClosureParamType occurrences="1">
      <code>$given</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="1">
      <code>static function ($given, callable $locator, string $message) {</code>
    </MissingClosureReturnType>
    <MixedArgument occurrences="5">
      <code>$data['body'] ?? null</code>
      <code>$responseBody-&gt;mainDocument</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$data['body']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$data</code>
      <code>$params[$parameter]</code>
    </MixedAssignment>
    <PossiblyNullArgument occurrences="3">
      <code>$data['body'] ?? null</code>
      <code>$resultSet-&gt;nextPage()</code>
      <code>$resultSet-&gt;previousPage()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="1">
      <code>save</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Document/Fragment/BaseCollection.php">
    <UnsafeInstantiation occurrences="2">
      <code>new static($fragments)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Document/Fragment/DateFragment.php">
    <MissingImmutableAnnotation occurrences="1">
      <code>DateTimeImmutable</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Document/Fragment/Embed.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$value !== null &amp;&amp; ! is_scalar($value)</code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Document/Fragment/Factory.php">
    <MixedAssignment occurrences="1">
      <code>$value</code>
    </MixedAssignment>
    <RedundantCondition occurrences="2">
      <code>assert(is_string($data))</code>
      <code>is_string($data)</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>'\is_string'</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Document/Fragment/Number.php">
    <DocblockTypeContradiction occurrences="1">
      <code>! is_int($number) &amp;&amp; ! is_float($number)</code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Predicate.php">
    <MixedArgument occurrences="3">
      <code>$data['args']</code>
      <code>$data['fragment']</code>
      <code>$data['name']</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$arg</code>
    </MixedAssignment>
  </file>
  <file src="src/Query.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_scalar($value)</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="5">
      <code>$parameters</code>
      <code>$parameters</code>
      <code>$parameters</code>
      <code>$parameters</code>
      <code>$parameters</code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$parameters</code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement occurrences="1">
      <code>$parameters</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>string[]|int[]</code>
    </InvalidReturnType>
    <MissingClosureParamType occurrences="1">
      <code>$params</code>
    </MissingClosureParamType>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$name</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="4">
      <code>$param</code>
      <code>$parameters[$name]</code>
      <code>$params</code>
      <code>$value</code>
    </MixedAssignment>
    <PossiblyInvalidArgument occurrences="1">
      <code>$parameters[$name]</code>
    </PossiblyInvalidArgument>
    <UnsafeInstantiation occurrences="1">
      <code>new static($this-&gt;form)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/ResultSet/StandardResultSet.php">
    <PossiblyFalsePropertyAssignmentValue occurrences="1"/>
  </file>
  <file src="src/Serializer/HtmlSerializer.php">
    <MixedArgument occurrences="1">
      <code>$item</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$item</code>
    </MixedAssignment>
  </file>
  <file src="test/Unit/Document/Fragment/RichTextTest.php">
    <UndefinedInterfaceMethod occurrences="2">
      <code>text</code>
      <code>text</code>
    </UndefinedInterfaceMethod>
  </file>
</files>
